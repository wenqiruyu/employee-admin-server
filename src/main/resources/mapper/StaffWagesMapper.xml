<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.employee.admin.mapper.IStaffWagesMapper">
    <resultMap id="staffWagesResultMap" type="com.employee.admin.vo.StaffWagesVO">
        <result column="emp_id" jdbcType="VARCHAR" property="empId"/>
        <result column="emp_name" jdbcType="VARCHAR" property="empName"/>
        <result column="period" jdbcType="VARCHAR" property="period"/>
        <result column="base_wages" jdbcType="DECIMAL" property="baseWages"/>
        <result column="subsidy" jdbcType="DECIMAL" property="subsidy"/>
        <result column="tax" jdbcType="DECIMAL" property="tax"/>
        <result column="real_wages" jdbcType="DECIMAL" property="realWages"/>
    </resultMap>

    <resultMap id="getEmpByWagesVOResultMap" type="com.employee.admin.vo.GetEmpByWagesVO">
        <result column="emp_id" jdbcType="VARCHAR" property="empId"/>
        <result column="emp_name" jdbcType="VARCHAR" property="empName"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
    </resultMap>

    <sql id="staffWages">
        emp_id, emp_name, period, base_wages, subsidy, tax, real_wages
    </sql>

    <insert id="addAllStaffWages" parameterType="java.util.List">
        insert into employee_staff_wages_t(emp_id, emp_name, period, base_wages, subsidy, tax, real_wages, delete_flag,
        create_time, update_time)
        <foreach collection ="list" item ="item" index ="index" open="("  close=")"  separator ="union all">
            select
            #{item.empId},
            #{item.empName},
            #{item.period},
            #{item.baseWages},
            #{item.subsidy},
            #{item.tax},
            #{item.realWages},
            #{item.deleteFlag},
            #{item.createTime},
            #{item.updateTime}
            from dual
        </foreach >
    </insert>

    <update id="updateAllWages" parameterType="java.util.List">
        update employee_staff_wages_t
        set delete_flag =
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case emp_id" close="end">
            when #{item.empId,jdbcType=VARCHAR} then #{item.deleteFlag}
        </foreach>
        , subsidy =
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case emp_id" close="end">
            when #{item.empId,jdbcType=VARCHAR} then #{item.subsidy}
        </foreach>
        where emp_id in
        <foreach collection="list" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.empId,jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="getAllStaffWages" resultMap="staffWagesResultMap">
        select
        <include refid="staffWages"/>
        from employee_staff_wages_t
        where delete_flag = 0
    </select>

    <select id="getPageWages" resultMap="staffWagesResultMap">
        select
        <include refid="staffWages"/>
        from employee_staff_wages_t
        where delete_flag = 0
        order by period desc
    </select>

    <select id="getStaffWagesPageByUserId" resultMap="staffWagesResultMap">
        select
        <include refid="staffWages"/>
        from employee_staff_wages_t
        where delete_flag = 0
        and emp_id = #{empId}
    </select>

    <select id="getStaffWagesByUserId" resultMap="staffWagesResultMap" parameterType="Long">
        select
        <include refid="staffWages"/>
        from employee_staff_wages_t
        where delete_flag = 0
        and user_id = #{userId}
    </select>

    <select id="getWagesByEmpName" resultMap="staffWagesResultMap">
        select *
        from (
            select
            <include refid="staffWages"/>
            from employee_staff_wages_t
            where delete_flag = 0
        ) res
        where res.emp_name like "%"#{empName}"%"
    </select>

    <select id="getEmpByWages" resultMap="getEmpByWagesVOResultMap">
        select esbt.emp_id,esbt.emp_name,res.role_id
        from employee_staff_base_t esbt, (
            select emp_id, userRole.role_id
            from (
            select role_id, user_id
            from employee_staff_role_t
            where role_id = 'ROLE002'
            or role_id = 'ROLE003'
            and  delete_flag = 0
            ) userRole, employee_staff_user_t userAndEmp
            where userAndEmp.user_id = userRole.user_id
        )res
        where esbt.emp_id = res.emp_id
    </select>

    <select id="getAllWagesByPeriod" resultMap="staffWagesResultMap" parameterType="String">
        select
        <include refid="staffWages"/>
        from employee_staff_wages_t
        where period = #{period}
        and delete_flag = 1
    </select>

    <update id="updateStatus">
        update employee_staff_wages_t
        set delete_flag = 1
        where emp_id=#{empId}
    </update>
</mapper>

